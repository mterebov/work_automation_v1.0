import unittest
import MAIN


class TestMAIN(unittest.TestCase):
    
    def setUp(self):
        self.file_data = ['Резервное копирование баз 1С | 04.09.2024 | 2 часа\n', 'Удаление помеченных на удаление объектов в Опт ГК и очистка неиспользуемых регистров сведений - еженедельно | 11.09.2024 | 1 час\n', 'Обновление карты сайта | 11.09.2024 | 0.5 часа\n', 'Обслуживание ИМ - анализ и удаление логов, оптимизация базы данных, проверка антивирусом, бэкап базы и скриптов | 11.09.2024 | 2 часа\n', 'Тестирование и исправление базы Опт ГК - еженедельное | 11.09.2024 | 1 час\n', 'Удаление помеченных на удаление объектов в Опт ГК и очистка неиспользуемых регистров сведений - еженедельно | 17.09.2024 |  1 час\n', 'Тестирование и исправление базы Опт ГК - еженедельное | 17.09.2024 | 1 час\n', 'Обслуживание ИМ - анализ и удаление логов, оптимизация базы данных, проверка антивирусом, бэкап базы и скриптов | 16.09.2024 | 2 часа\n', 'Антивирус - обслуживание (диагностика клиентов и центра управления, обновления, решение возникающих проблем и т.д.) | 30.09.2024 | 1.5 часа']
        self.date_range = "01.09.2024 - 30.09.2024"
        self.summarry = 'Итого: 12.0 (9600.0)'
        self.year = 2024
        self.tasks = [['Резервное копирование баз 1С', '04.09.2024', '2 часа\n'],
                      ['Удаление помеченных на удаление объектов в Опт ГК и очистка неиспользуемых регистров сведений - еженедельно', '11.09.2024', '1 час\n'],
                      ['Обновление карты сайта', '11.09.2024', '0.5 часа\n'],
                      ['Обслуживание ИМ - анализ и удаление логов, оптимизация базы данных, проверка антивирусом, бэкап базы и скриптов', '11.09.2024', '2 часа\n'],
                      ['Тестирование и исправление базы Опт ГК - еженедельное', '11.09.2024', '1 час\n'],
                      ['Удаление помеченных на удаление объектов в Опт ГК и очистка неиспользуемых регистров сведений - еженедельно', '17.09.2024', ' 1 час\n'],
                      ['Тестирование и исправление базы Опт ГК - еженедельное', '17.09.2024', '1 час\n'],
                      ['Обслуживание ИМ - анализ и удаление логов, оптимизация базы данных, проверка антивирусом, бэкап базы и скриптов', '16.09.2024', '2 часа\n'],
                      ['Антивирус - обслуживание (диагностика клиентов и центра управления, обновления, решение возникающих проблем и т.д.)', '30.09.2024', '1.5 часа']]
        pass

    def tearDown(self):
        pass

    def test_summarry(self):
        self.test_sum = MAIN.summary(self.tasks)
        self.assertEqual(self.test_sum, self.summarry)

    def test_check_year(self):
        self.check_year_1 = MAIN.check_year(2024)
        self.assertTrue(self.check_year_1)
        self.check_year_2 = MAIN.check_year(2023)
        self.assertFalse(self.check_year_2)

    def test_filereader(self):
        self.data = MAIN.filereader('Выполненая работа.txt')
        self.assertEqual(self.file_data, self.data)

    def test_task_check(self):
        date_range_1 = "01.09.2024 - 15.09.2024"
        date_range_2 = "15.09.2024 - 30.09.2024"
        task_1 = [['Резервное копирование баз 1С', '04.09.2024', '2 часа\n'],
                      ['Удаление помеченных на удаление объектов в Опт ГК и очистка неиспользуемых регистров сведений - еженедельно', '11.09.2024', '1 час\n'],
                      ['Обновление карты сайта', '11.09.2024', '0.5 часа\n'],
                      ['Обслуживание ИМ - анализ и удаление логов, оптимизация базы данных, проверка антивирусом, бэкап базы и скриптов', '11.09.2024', '2 часа\n'],
                      ['Тестирование и исправление базы Опт ГК - еженедельное', '11.09.2024', '1 час\n']]
        task_2 = [['Удаление помеченных на удаление объектов в Опт ГК и очистка неиспользуемых регистров сведений - еженедельно', '17.09.2024', ' 1 час\n'],
                      ['Тестирование и исправление базы Опт ГК - еженедельное', '17.09.2024', '1 час\n'],
                      ['Обслуживание ИМ - анализ и удаление логов, оптимизация базы данных, проверка антивирусом, бэкап базы и скриптов', '16.09.2024', '2 часа\n'],
                      ['Антивирус - обслуживание (диагностика клиентов и центра управления, обновления, решение возникающих проблем и т.д.)', '30.09.2024', '1.5 часа']]
        self.tests_tasks = MAIN.task_check(self.file_data, self.date_range)
        self.assertEqual(self.tasks, self.tests_tasks)
        self.tests_tasks = MAIN.task_check(self.file_data, date_range_1)
        self.assertEqual(task_1, self.tests_tasks)
        self.tests_tasks = MAIN.task_check(self.file_data, date_range_2)
        self.assertEqual(task_2, self.tests_tasks)


    def test_date_protocool(self):
        chck_ls = ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 9, 2024)
        self.d_p_test = MAIN.date_protocool(self.date_range)
        self.assertEqual(chck_ls, self.d_p_test)


if __name__ == '__main__':
    unittest.main()
